name: API YaMDB workflow

on: [push]

jobs:
  tests:
    name: Flake8, Pytest and project-special tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt

    - name: Test with flake8 and django test
      run: |
        python -m flake8
        pytest
        cd api_yamdb/
        python manage.py test

  build_and_push_to_Docker_Hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v4

    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        file: ./api_yamdb/Dockerfile
        push: true
        tags: twoalex/api_yamdb:latest

  deploy:
    name: Deploying actual version to server
    runs-on: ubuntu-latest
    needs: build_and_push_to_Docker_Hub

    steps:
    - name: Executing remote SSH commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}

        script: |
          sudo docker pull twoalex/api_yamdb
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker-compose stop
          sudo docker-compose up -d

  send_message:
    name: Send message to authors telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен, свежая версия проекта запущена на сервере!
